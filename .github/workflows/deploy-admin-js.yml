defaults:
  run:
    working-directory: admin-js
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: npm install
    - env:
        PRODUCTION_DOMAIN: ${{secrets.PRODUCTION_DOMAIN}}
      run: npm run build
    - env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_DEFAULT_REGION: sa-east-1
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      name: Upload to S3
      run: aws s3 sync dist s3://${{secrets.AWS_S3_BUCKET_NAME}}/admin-js/latest
    - env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_DEFAULT_REGION: sa-east-1
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      name: Create Invalidation
      run: aws cloudfront create-invalidation --distribution-id ${{secrets.AWS_DISTRIBUTION_ID}}
        --paths "/admin-js/index.html" "/admin-js/remoteEntry.js"
    - name: Verify Deployment
      run: "bash -c \"\n                            status1=$(curl -o /dev/null -s\
        \ -w '%{http_code}\\n' https://${{secrets.AWS_CLOUDFRONT_DOMAIN}}/admin-js/latest/index.html);\n\
        \                            status2=$(curl -o /dev/null -s -w '%{http_code}\\\
        n' https://${{secrets.AWS_CLOUDFRONT_DOMAIN}}/admin-js/latest/remoteEntry.js);\n\
        \                            echo 'Status1: '$status1', Status2: '$status2;\n\
        \                            if [ -z '$status1' ] || [ -z '$status2' ]; then\n\
        \                                echo 'Error: One or more status codes are\
        \ empty.';\n                                exit 1;\n                    \
        \        elif [ '$status1' -ne 200 ] || [ '$status2' -ne 200 ]; then\n   \
        \                             echo 'Error: One or more files failed to deploy\
        \ properly.';\n                                exit 1;\n                 \
        \           fi\"\n                        "
name: deploy-admin-js
'on':
  push:
    branches:
    - main
    - master
    paths:
    - admin-js/**
